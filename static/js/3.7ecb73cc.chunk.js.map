{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","style","dialog__wrapper","dialog","activeClassName","active","to","id","src","avatar","alt","name","Message","wrapperClasses","messageClasses","type","message__wrapper","right","join","message","green","grey","AddMessageForm","onSubmit","render","handleSubmit","component","Textarea","placeholder","validate","composeValidators","requiredField","maxLengthCreator","Dialogs","dialogElements","state","dialogs","map","i","key","messagesElement","messages","onSendMessage","values","sendMessage","newMessageBody","dialogs__item","textarea__wrapper","compose","connect","dialogsPage","dispatch","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,0BAA0B,kBAAoB,mCAAmC,SAAW,4B,oBCA3MD,EAAOC,QAAU,CAAC,gBAAkB,oCAAoC,OAAS,2BAA2B,OAAS,2BAA2B,OAAS,6B,oBCAzJD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,MAAQ,uBAAuB,QAAU,yBAAyB,KAAO,sBAAsB,MAAQ,yB,wGCoB/JC,EAjBI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAMC,iBAClB,kBAAC,IAAD,CACIF,UAAWC,IAAME,OACjBC,gBAAiBH,IAAMI,OACvBC,GAAE,oBAAeP,EAAMQ,KACvB,yBACAC,IAAKT,EAAMU,OACXC,IAAI,cACJV,UAAWC,IAAMQ,SACfV,EAAMY,Q,kBCSTC,EArBC,SAACb,GAEb,IAAIc,EAAgBC,EAUpB,MARmB,SAAff,EAAMgB,MACNF,EAAiB,CAACZ,IAAMe,iBAAkBf,IAAMgB,OAAOC,KAAK,KAC5DJ,EAAiB,CAACb,IAAMkB,QAASlB,IAAMmB,OAAOF,KAAK,OAEnDL,EAAiBZ,IAAMe,iBACvBF,EAAiB,CAACb,IAAMkB,QAASlB,IAAMoB,MAAMH,KAAK,MAIlD,yBAAKlB,UAAYa,GACb,0BAAMb,UAAYc,GACZf,EAAMoB,W,wBCkClBG,EAAiB,SAACvB,GACpB,OACI,kBAAC,IAAD,CACIwB,SAAWxB,EAAMwB,SACjBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACJ,0BAAMF,SAAWE,GACd,6BACK,kBAAC,IAAD,CACIC,UAAYC,IACZhB,KAAK,iBACLiB,YAAY,aACZC,SAAUC,YAAkBC,IAAeC,YAAiB,SAGpE,6BACI,8CAQTC,EAnEC,SAAClC,GAEb,IAAImC,EAAiBnC,EAAMoC,MAAMC,QAC5BC,KAAI,SAAClC,EAAQmC,GAAT,OAAe,kBAAC,EAAD,CAChBC,IAAMD,EACN3B,KAAOR,EAAOQ,KACdJ,GAAKJ,EAAOI,GACZE,OAASN,EAAOM,YAGpB+B,EAAkBzC,EAAMoC,MAAMM,SAC7BJ,KAAI,SAAClB,EAASmB,GAAV,OAAgB,kBAAC,EAAD,CACjBC,IAAMD,EACNnB,QAAUA,EAAQA,QAClBJ,KAAOI,EAAQJ,UAGnB2B,EAAgB,SAACC,GACjB5C,EAAM6C,YAAYD,EAAOE,iBAS7B,OACI,yBAAK7C,UAAYC,IAAMmC,SACnB,yBAAKpC,UAAYC,IAAM6C,eACjBZ,GAEN,6BACI,yBAAKlC,UAAYC,IAAMwC,UACjBD,GAEN,yBAAKxC,UAAYC,IAAM8C,mBACnB,kBAAC,EAAD,CAAgBxB,SAAWmB,Q,gCCtBhCM,sBACXC,aAfoB,SAACd,GACrB,MAAO,CACHA,MAAOA,EAAMe,gBAIM,SAACC,GACxB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASP,YAAYC,SAO7BO,IAFWJ,CAGbf","file":"static/js/3.7ecb73cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs__item\":\"Dialogs_dialogs__item__2Ej2w\",\"messages\":\"Dialogs_messages__1w_Up\",\"textarea__wrapper\":\"Dialogs_textarea__wrapper___HNL0\",\"textarea\":\"Dialogs_textarea__PRKXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog__wrapper\":\"DialogItem_dialog__wrapper__10rsc\",\"dialog\":\"DialogItem_dialog__3tDA2\",\"avatar\":\"DialogItem_avatar__12OzI\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message__wrapper\":\"Message_message__wrapper__3Skaz\",\"right\":\"Message_right__1lza_\",\"message\":\"Message_message__1MOXo\",\"grey\":\"Message_grey__37-M8\",\"green\":\"Message_green__16XPu\"};","import React from 'react';\r\nimport style from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={style.dialog__wrapper}>\r\n            <NavLink \r\n                className={style.dialog} \r\n                activeClassName={style.active}\r\n                to={`/messages/${props.id}`}>\r\n                <img \r\n                src={props.avatar}\r\n                alt='User avatar'\r\n                className={style.avatar}></img>\r\n                { props.name }\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n\r\n    let wrapperClasses, messageClasses;\r\n    \r\n    if (props.type === 'user') {\r\n        wrapperClasses = [style.message__wrapper, style.right].join(' ');\r\n        messageClasses = [style.message, style.green].join(' ');\r\n    } else {\r\n        wrapperClasses = style.message__wrapper;\r\n        messageClasses = [style.message, style.grey].join(' ')\r\n    }\r\n\r\n    return (\r\n        <div className={ wrapperClasses }>\r\n            <span className={ messageClasses }>\r\n                { props.message }\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Form, Field } from 'react-final-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { composeValidators, requiredField, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElements = props.state.dialogs\r\n        .map((dialog, i) => <DialogItem\r\n            key={ i }\r\n            name={ dialog.name }\r\n            id={ dialog.id }\r\n            avatar={ dialog.avatar } />\r\n    );\r\n\r\n    let messagesElement = props.state.messages\r\n        .map((message, i) => <Message\r\n            key={ i }\r\n            message={ message.message }\r\n            type={ message.type } />\r\n    );\r\n\r\n    let onSendMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    let pressEnter = (event) => {\r\n        if (event.key === 'Enter') {\r\n            onSendMessage();\r\n        }\r\n    } \r\n\r\n    return (\r\n        <div className={ style.dialogs }>\r\n            <div className={ style.dialogs__item }>\r\n                { dialogElements }\r\n            </div>\r\n            <div>\r\n                <div className={ style.messages }>\r\n                    { messagesElement }\r\n                </div>\r\n                <div className={ style.textarea__wrapper }>\r\n                    <AddMessageForm onSubmit={ onSendMessage } />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <Form\r\n            onSubmit={ props.onSubmit }\r\n            render={({ handleSubmit }) => (\r\n                <form onSubmit={ handleSubmit }>\r\n                   <div>\r\n                        <Field \r\n                            component={ Textarea }\r\n                            name='newMessageBody'\r\n                            placeholder='Message...'\r\n                            validate={composeValidators(requiredField, maxLengthCreator(100))}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button>Send</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport { \r\n    sendMessage\r\n} from '../../redux/dialogs_reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogsPage\r\n    }  \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessage(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}