{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Setting/Setting.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","style","header","src","alt","Navbar","nav","item","activeClassName","active","to","Post","props","avatar","text","like","MyPosts","textarea","posts","ProfileInfo","prosp","img__wrapper","images","Profile","wrapper","DialogItem","dialog","id","name","Message","message","Dialogs","dialogs","dialogs__item","messages","News","Music","Setting","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f7db9b3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogs__item\":\"Dialogs_dialogs__item__2Ej2w\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyPosts_textarea__3KLbu\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"avatar\":\"Post_avatar__1wBwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"ProfileInfo_images__PaDz6\",\"img__wrapper\":\"ProfileInfo_img__wrapper__3RAZ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__h79Yz\"};","import React from 'react';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img src='https://static.rfstat.com/renderforest/images/v2/logo-homepage/flat_3.png' alt='logo'></img>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink activeClassName={style.active} to='/profile'>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink activeClassName={style.active} to='/messages'>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink activeClassName={style.active} to='/news'>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink activeClassName={style.active} to='/music'>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink activeClassName={style.active} to='/setting'>Setting</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={style.item}>\r\n                <img className={style.avatar} src={props.src} alt='avatar'></img>\r\n                { props.text }\r\n            </div>\r\n            <span>Like {props.like} </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = () => {\r\n\r\n    let postsData = [\r\n        {id: 1, text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo veritatis, corrupti assumenda quidem impedit delectus facere in neque nulla, odio quibusdam, reprehenderit quaerat expedita quod cum iure ipsum provident laborum.', avatar: 'https://www.vranimesociety.com/assets/logo-ca820fd22dfa0d8709ba05792671557237691b242eaa87ddc8e5438fe8c72fdc.webp', like: 0},\r\n        {id: 2, text: 'I don\\'t no', avatar: 'https://data.whicdn.com/images/333477434/original.jpg'},\r\n        {id: 3, text: 'Whyyyyyyyyyyyyyyyyyyyyy?', avatar: 'https://data.whicdn.com/images/333477434/original.jpg'},\r\n        {id: 4, text: 'Why not :)', avatar: 'https://data.whicdn.com/images/333477434/original.jpg'},\r\n        {id: 5, text: 'Olivia', avatar: 'https://data.whicdn.com/images/333477434/original.jpg'}\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea className={style.textarea}></textarea>\r\n                </div>\r\n                <div>\r\n                    <button>Add Post</button>\r\n                </div>\r\n            </div>\r\n            <div className={style.posts}>\r\n                <Post\r\n                    text='Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo veritatis, corrupti assumenda quidem impedit delectus facere in neque nulla, odio quibusdam, reprehenderit quaerat expedita quod cum iure ipsum provident laborum.'\r\n                    src='https://www.vranimesociety.com/assets/logo-ca820fd22dfa0d8709ba05792671557237691b242eaa87ddc8e5438fe8c72fdc.webp'\r\n                    like='0' />\r\n                <Post\r\n                    text=\"I don't no\"\r\n                    src='https://data.whicdn.com/images/333477434/original.jpg'\r\n                    like='5' />\r\n                <Post\r\n                    text='Whyyyyyyyyyyyyyyyyyyyyy?'\r\n                    src='https://i.pinimg.com/736x/f8/8f/31/f88f31f29fb6e42b8c387743405166b7.jpg'\r\n                    like='10' />\r\n                <Post\r\n                    text='Why not :)'\r\n                    src='https://pbs.twimg.com/profile_images/1082020318523412480/E87sUSUc_400x400.jpg'\r\n                    like='3' />\r\n                <Post\r\n                    text='Olivia'\r\n                    src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRTB1XNd7zac9ZAJs3LHlgHbGdhVsjyohiqHQ&usqp=CAU'\r\n                    like='7' />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = (prosp) => {\r\n    return (\r\n        <div>\r\n            <div className={style.img__wrapper}>\r\n                <img className={style.images} src='https://i.pinimg.com/originals/6f/2d/34/6f2d34fe6c8746c56c14fbc55308ef99.jpg' alt='anime background'></img>\r\n            </div>\r\n            <div>\r\n                avatar + description\r\n                </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <ProfileInfo />\r\n            <MyPosts />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <NavLink to={`/messages/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsData = [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Sveta'},\r\n        {id: 3, name: 'Valera'},\r\n        {id: 4, name: 'Polya'},\r\n        {id: 5, name: 'Anna'},\r\n        {id: 6, name: 'Oliva'},\r\n        {id: 7, name: 'Korina'},\r\n    ]\r\n\r\n    let essagesData = [\r\n        {id: 1, message: 'Hello'},\r\n        {id: 2, message: \"I don't no\"},\r\n        {id: 3, message: 'Abrakadabra'},\r\n        {id: 4, message: 'Step for my sister'},\r\n        {id: 5, message: 'Omnon nim'},\r\n        {id: 6, message: 'Nuaah'},\r\n        {id: 7, message: 'Poly'},\r\n    ]\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogs__item}>\r\n                <DialogItem name='Dimich' id='1' />\r\n                <DialogItem name='Sveta' id='2' />\r\n                <DialogItem name='Valera' id='3' />\r\n                <DialogItem name='Polya' id='4' />\r\n                <DialogItem name='Anna' id='5' />\r\n                <DialogItem name='Oliva' id='6' />\r\n                <DialogItem name='Korina' id='7' />\r\n            </div>\r\n            <div className={style.messages}>\r\n                <Message message='Hello' />\r\n                <Message message=\"I don't no\" />\r\n                <Message message='Abrakadabra' />\r\n                <Message message='Step for my sister' />\r\n                <Message message='Omnon nim' />\r\n                <Message message='Nuaah' />\r\n                <Message message='Poly' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport style from './News.module.css'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport style from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport style from './Setting.module.css'\r\n\r\nconst Setting = (props) => {\r\n    return (\r\n        <div>\r\n            Setting\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting;","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Setting from './components/Setting/Setting';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <div className='app-wrapper'>\n        <Header />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/profile' component={Profile} />\n          <Route path='/messages' component={Dialogs} />\n          <Route path='/news' component={News} />\n          <Route path='/music' component={Music} />\n          <Route path='/setting' component={Setting} />\n        </div>\n      </div>\n    </HashRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}